{
  "openapi": "3.0.0",
  "info": {
    "title": "Twitter Clone API Specification",
    "description": "API Clone for Twitter",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/v1"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "summary": "Authentication login",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john@doe.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success login",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            }
          }
        }
      }
    },
    "/auth": {
      "post": {
        "summary": "Sending OTP to a login user",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john@doe.com"
                  },
                  "emailToken": {
                    "type": "string",
                    "example": "65694359"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "authToken": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbklkIjoyNX0.hfFqa_NXiGqWSUorNDFq-VXGuHn_fSz_BFfjSi6S5pA"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "summary": "Create a new user",
        "tags": [
          "User"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john@doe.com"
                  },
                  "name": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "username": {
                    "type": "string",
                    "example": "John"
                  },
                  "bio": {
                    "type": "string",
                    "nullable": true,
                    "example": null
                  }
                },
                "required": [
                  "email",
                  "name",
                  "username"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "User created successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Username and email should be unique.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Username and email should be unique"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Retrieve all users",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Users listed successfully"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error while fetching users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred while fetching users. Please try again later."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/result": {
      "get": {
        "summary": "Retrieve a user by username",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Username of the user to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "User found"
                    },
                    "data": {
                      "$ref": "#/components/schemas/UserWithTweets"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Retrieve a specific user",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the user to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserWithTweets"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a specific user",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the user to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "format": "email",
                    "example": "john@doe.com"
                  },
                  "name": {
                    "type": "string",
                    "example": "Daenerys Targaryen"
                  },
                  "username": {
                    "type": "string",
                    "example": "Daenerys"
                  },
                  "image": {
                    "type": "string",
                    "nullable": true,
                    "example": null
                  },
                  "bio": {
                    "type": "string",
                    "nullable": true,
                    "example": "Hey there!"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "User updated successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/UserUpdated"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to update the user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to update the user"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a specific user",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the user to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully"
          },
          "400": {
            "description": "Failed to delete the user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to delete the user"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/upload/{id}": {
      "post": {
        "summary": "Upload the user avatar",
        "tags": ["User"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the user to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Avatar upload successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Avatar upload successfully"
                    },
                    "data": {
                      "type": "string",
                      "example": "https://tweetify.s3.us-east-1.amazonaws.com/xxx"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/delete-avatar/{id}": {
      "delete": {
        "summary": "Delete an avatar",
        "tags": ["User"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the user avatar to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Image deleted successfully"
          },
          "400": {
            "description": "Failed to delete the avatar",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to delete the avatar"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tweets": {
      "post": {
        "summary": "To create tweet",
        "tags": [
          "Tweet"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john@doe.com"
                  },
                  "name": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "username": {
                    "type": "string",
                    "example": "John"
                  },
                  "bio": {
                    "type": "string",
                    "nullable": true,
                    "example": null
                  }
                },
                "required": [
                  "email",
                  "name",
                  "username"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tweet created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Tweet created successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Username and email should be unique.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Username and email should be unique"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Retrieve all tweets",
        "tags": [
          "Tweet"
        ],
        "responses": {
          "200": {
            "description": "List of tweets",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Success Get All Tweets"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Tweet"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error while fetching tweets",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred while fetching tweets. Please try again later."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tweets/{id}": {
      "get": {
        "summary": "Get Tweet By ID",
        "tags": [
          "Tweet"
        ],
        "responses": {
          "200": {
            "description": "Get tweet by ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Success get tweet by ID"
                    },
                    "data": {
                      "$ref": "#/components/schemas/GetTweetByID"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update tweet",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the user to update"
          }
        ],
        "tags": [
          "Tweet"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "content": {
                    "type": "string",
                    "example": "This is a content!"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success Updating Tweet",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Success updated tweet"
                    },
                    "data": {
                      "$ref": "#/components/schemas/TweetUpdated"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a specific tweet",
        "tags": [
          "Tweet"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the tweet to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Tweet deleted successfully"
          },
          "400": {
            "description": "Failed to delete the tweet",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to delete the tweet"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserWithTweets": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "User get by id found successfully"
          },
          "user": {
            "$ref": "#/components/schemas/UserWithTweetsAndTweets"
          }
        }
      },
      "UserWithTweetsAndTweets": {
        "allOf": [
          {
            "$ref": "#/components/schemas/User"
          },
          {
            "type": "object",
            "properties": {
              "tweets": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Tweet"
                }
              }
            }
          }
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-03-08T12:31:36.731Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-03-08T12:31:36.731Z"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john@doe.com"
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "username": {
            "type": "string",
            "example": "John"
          },
          "image": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "bio": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "isVerified": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "UserUpdated": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-03-08T12:31:36.731Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-03-08T12:31:36.731Z"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john@doe.com"
          },
          "name": {
            "type": "string",
            "example": "Daenerys Targaryen"
          },
          "username": {
            "type": "string",
            "example": "Daenerys"
          },
          "image": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "bio": {
            "type": "string",
            "nullable": true,
            "example": "Hey there!"
          },
          "isVerified": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "Tweet": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 2
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-03-07T11:18:02.654Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-03-07T11:18:02.654Z"
          },
          "content": {
            "type": "string",
            "example": "Hello from thunder client"
          },
          "image": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "impression": {
            "type": "integer",
            "example": 0
          },
          "userId": {
            "type": "integer",
            "example": 1
          },
          "user": {
            "$ref": "#/components/schemas/GetAllTweets"
          }
        }
      },
      "GetAllTweets": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "username": {
            "type": "string",
            "example": "John"
          },
          "image": {
            "type": "string",
            "example": null
          }
        }
      },
      "GetTweetByID": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 2
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-03-07T11:18:02.654Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-03-07T11:18:02.654Z"
          },
          "content": {
            "type": "string",
            "example": "Hello from thunder client"
          },
          "image": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "impression": {
            "type": "integer",
            "example": 0
          },
          "userId": {
            "type": "integer",
            "example": 1
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "TweetUpdated": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-03-08T12:31:36.731Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-03-08T12:31:36.731Z"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-03-08T12:31:36.731Z"
          },
          "content": {
            "type": "string",
            "example": "This is a content!"
          },
          "image": {
            "type": "string",
            "example": null
          },
          "impression": {
            "type": "number",
            "example": 200
          },
          "userId": {
            "type": "number",
            "example": 1
          }
        }
      }
    }
  }
}